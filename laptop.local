# BIGTODO: I need to update this to have a linux compatible setup...really just
# need to bash script it from scratch. scripts/setup.sh is a start at it


git_clone_or_pull() {
  local REPOSRC=$1
  local LOCALREPO=$2
  local LOCALREPO_VC_DIR=$LOCALREPO/.git
  if [[ ! -d "$LOCALREPO_VC_DIR" ]]; then
    git clone --recursive $REPOSRC $LOCALREPO
  else
    pushd $LOCALREPO
    git pull $REPOSRC && git submodule update --init --recursive
    popd
  fi
}

brew_cask_expand_alias() {
  brew cask info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_cask_is_installed() {
  local NAME=$(brew_cask_expand_alias "$1")
  brew cask list -1 | grep -Fqx "$NAME"
}

brew_cask_install() {
  if ! brew_cask_is_installed "$1"; then
    brew cask install "$@"
  fi
}

brew_cask_install_or_upgrade() {
  if brew_cask_is_installed "$1"; then
    echo "$1 is already installed, brew cask upgrade is not yet implemented"
  else
    brew cask install "$@"
  fi
}

brew tap caskroom/cask

brew_cask_install_or_upgrade 'google-chrome'
brew_cask_install_or_upgrade 'firefox'
brew_cask_install_or_upgrade 'private-internet-access'
brew_cask_install_or_upgrade 'dropbox'
brew_cask_install_or_upgrade 'virtualbox'
brew_cask_install_or_upgrade 'iterm2'
brew_cask_install_or_upgrade 'dash'
brew_cask_install_or_upgrade 'java'
brew_cask_install_or_upgrade 'slack'
brew_cask_install_or_upgrade 'alfred'
brew_cask_install_or_upgrade 'spotify'
brew_cask_install_or_upgrade 'xquartz'
brew_cask_install_or_upgrade 'skitch'
brew_cask_install_or_upgrade '1password'
brew_cask_install_or_upgrade 'vlc'
brew_cask_install_or_upgrade 'ngrok'

brew bundle --file=- <<EOF
brew 'autojump'
brew 'wget'
brew 'tree'
brew 'shellcheck'
brew 'cmake'
EOF

touch ~/.zshrc.private

git_clone_or_pull 'https://github.com/jakecraige/dotfiles' '.dotfiles'

ln -sf ~/.dotfiles/rcrc ~/.rcrc
ln -sf ~/.vim ~/nvim
ln -sf ~/.vimrc ~/nvim/init.vim

rcup -v

mkdir -p ~/.vim/autoload
curl -fLo ~/.vim/autoload/plug.vim \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder

asdf plugin-add nodejs
asdf plugin-add golang
asdf plugin-add python
asdf plugin-add nodejs
asdf plugin-add rust
