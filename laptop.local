git_clone_or_pull() {
  local REPOSRC=$1
  local LOCALREPO=$2
  local LOCALREPO_VC_DIR=$LOCALREPO/.git
  if [[ ! -d "$LOCALREPO_VC_DIR" ]]; then
    git clone --recursive $REPOSRC $LOCALREPO
  else
    pushd $LOCALREPO
    git pull $REPOSRC && git submodule update --init --recursive
    popd
  fi
}

brew_cask_expand_alias() {
  brew cask info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_cask_is_installed() {
  local NAME=$(brew_cask_expand_alias "$1")
  brew cask list -1 | grep -Fqx "$NAME"
}

brew_cask_install() {
  if ! brew_cask_is_installed "$1"; then
    brew cask install "$@"
  fi
}

brew_cask_install_or_upgrade() {
  if brew_cask_is_installed "$1"; then
    echo "$1 is already installed, brew cask upgrade is not yet implemented"
  else
    brew cask install "$@"
  fi
}

brew tap caskroom/cask
brew_install_or_upgrade 'brew-cask'

brew_cask_install_or_upgrade 'google-chrome'
brew_cask_install_or_upgrade 'firefox'
brew_cask_install_or_upgrade 'private-internet-access'
brew_cask_install_or_upgrade 'utorrent'
brew_cask_install_or_upgrade 'dropbox'
brew_cask_install_or_upgrade 'vagrant'
brew_cask_install_or_upgrade 'virtualbox'
brew_cask_install_or_upgrade 'iterm2'
brew_cask_install_or_upgrade 'dash'
brew_cask_install_or_upgrade 'java'
brew_cask_install_or_upgrade 'slack'
brew_cask_install_or_upgrade 'alfred'
brew_cask_install_or_upgrade 'spotify'
brew_cask_install_or_upgrade 'xquartz'
brew_cask_install_or_upgrade 'limechat'
brew_cask_install_or_upgrade 'flux'
brew_cask_install_or_upgrade 'sourcetree'
brew_cask_install_or_upgrade 'evernote'
brew_cask_install_or_upgrade 'skitch'
brew_cask_install_or_upgrade 'transmit'
brew_cask_install_or_upgrade '1password'
brew_cask_install_or_upgrade 'sublime-text'
brew_cask_install_or_upgrade 'fluid'
brew_cask_install_or_upgrade 'silverlight'
brew_cask_install_or_upgrade 'vlc'

brew_install_or_upgrade 'android-sdk'
brew_install_or_upgrade 'autojump'
brew_install_or_upgrade 'chromedriver'
brew_install_or_upgrade 'elasticsearch'
brew_install_or_upgrade 'elixir'
brew_install_or_upgrade 'hub'
brew_install_or_upgrade 'leiningen'
brew_install_or_upgrade 'mongodb'
brew_install_or_upgrade 'wget'
brew_install_or_upgrade 'ngrok'
brew_install_or_upgrade 'shellcheck'
brew_install_or_upgrade 'phantomjs'
brew_install_or_upgrade 'nvm'
brew_install_or_upgrade 'cmake'
brew tap neovim/homebrew-neovim
brew install neovim --HEAD

# Drupal
brew tap homebrew/dupes
brew tap homebrew/versions
brew tap homebrew/php
brew install php55 --without-snmp
brew_install_or_upgrade 'composer'
brew install drush --HEAD

mkdir -p ~/.nvm
mkdir -p ~/Work
mkdir -p ~/Work/apps
mkdir -p ~/Work/archived
mkdir -p ~/Work/internal
mkdir -p ~/Work/open-source
mkdir -p ~/Work/presentations
mkdir -p ~/Work/research
mkdir -p ~/Development
mkdir -p ~/gitrepos

git_clone_or_pull 'https://github.com/jakecraige/dotfiles' '.dotfiles'

ln -sf ~/.dotfiles/rcrc ~/.rcrc
ln -sf ~/.vim ~/.nvim
ln -sf ~/.vimrc ~/.nvimrc

rcup -v

mkdir -p ~/.vim/autoload
curl -fLo ~/.vim/autoload/plug.vim \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

sudo easy_install pip
sudo chown -R $USER /Library/Python/2.7/site-packages
sudo chown -R $USER /System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7
pip install neovim

gem_install_or_update 'rails'
gem_install_or_update 'parity'
gem_install_or_update 'suspenders'
gem_install_or_update 'tmuxinator'

source $(brew --prefix nvm)/nvm.sh
nvm install stable
nvm alias default stable
nvm use stable

npm install -g npm
npm install -g grunt grunt-cli
npm install -g ember-cli
npm install -g bower
npm install -g gulp
npm install -g cordova
